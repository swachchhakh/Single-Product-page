[{"D:\\ecommerce\\src\\index.js":"1","D:\\ecommerce\\src\\App.js":"2","D:\\ecommerce\\src\\reportWebVitals.js":"3","D:\\ecommerce\\src\\navbar.js":"4","D:\\ecommerce\\src\\productPage.js":"5","D:\\ecommerce\\src\\product.js":"6","D:\\ecommerce\\src\\context.js":"7","D:\\ecommerce\\src\\Modal.js":"8"},{"size":573,"mtime":1640113612008,"results":"9","hashOfConfig":"10"},{"size":265,"mtime":1640167661222,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1638987301046,"results":"12","hashOfConfig":"10"},{"size":3901,"mtime":1646338352008,"results":"13","hashOfConfig":"10"},{"size":4906,"mtime":1640277643906,"results":"14","hashOfConfig":"10"},{"size":968,"mtime":1640169922551,"results":"15","hashOfConfig":"10"},{"size":709,"mtime":1640280394519,"results":"16","hashOfConfig":"10"},{"size":2514,"mtime":1640273053819,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"977wu6",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"D:\\ecommerce\\src\\index.js",[],["38","39"],"D:\\ecommerce\\src\\App.js",[],"D:\\ecommerce\\src\\reportWebVitals.js",[],"D:\\ecommerce\\src\\navbar.js",["40"],"import React, {useState} from 'react'\r\n\r\nimport logo from './images/logo.svg'\r\nimport avatar from './images/image-avatar.png'\r\nimport deleteIcon from './images/icon-delete.svg'\r\n\r\nimport cartIcon from './images/icon-cart.svg'\r\nimport {useGlobalContext} from './context'\r\nimport  products  from './product'\r\n\r\nimport {  motion } from 'framer-motion'\r\n\r\n\r\n\r\n\r\n\r\nfunction Navbar() {\r\n\r\n    const {cartCounter, setCartCounter, mobileMenu, setMobileMenu} = useGlobalContext()\r\n\r\n    const [showCart, setShowCart] = useState(false)\r\n\r\n    const animation ={\r\n        opened : {\r\n            y: 0,\r\n        },\r\n        closed :{\r\n            y: '-100vh',\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n\r\n        <nav>\r\n        <motion.div className='navbar' initial={{y : 10 , opacity:0 }} transition={{delay: 1.5}} animate ={{y : 0 , opacity: 1}}\r\n        transition={{delay: 1}}>\r\n            <div className=\"logo\">\r\n            <img src={logo} alt=\"logo\"/>\r\n            </div>\r\n            <div className=\"menu\">\r\n                <ul>\r\n                    <li>Collections</li>\r\n                    \r\n                    <li>Men</li>\r\n                    \r\n                    <li>Women</li>\r\n                    \r\n                    <li>About</li>\r\n                    \r\n                    <li>Contact</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"cartSection\">\r\n\r\n                <div className=\"cart\" >\r\n                    <img src={cartIcon} alt=\"cart\" onClick={() => setShowCart(!showCart)  }/><p className='cartCount'>{cartCounter}</p>\r\n                </div>\r\n                <div className=\"avatar\">\r\n                    <img src={avatar} alt=\"\"/>\r\n                </div>\r\n                    <div className=\"mobile-menu\">\r\n\r\n                        <p onClick={() => setMobileMenu(true)}>Menu</p>\r\n                    </div>\r\n              \r\n                <div className={`${showCart  ? 'cart-wrapper' : 'cart-no-wrapper'}`}>\r\n            <div className=\"cart-header\">\r\n            <h2>Cart</h2>\r\n                <div className=\"cart-close-icon\"  onClick={() => setShowCart(false)}>\r\n                <svg width=\"14\" height=\"15\" viewBox='0 0 14 15' xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"m11.596.782 2.122 2.122L9.12 7.499l4.597 4.597-2.122 2.122L7 9.62l-4.595 4.597-2.122-2.122L4.878 7.5.282 2.904 2.404.782l4.595 4.596L11.596.782Z\" \r\n            fill=\"#fff\" fill-rule=\"evenodd\" \r\n           /></svg>\r\n                </div>\r\n            </div>\r\n            <span></span>\r\n        {   cartCounter > 0 ?\r\n            products.map((item)=>{\r\n                return (<div className=\"cart-content-container\">\r\n                  <div>\r\n                  <img src={item.ImageThumbSrc[0]} alt=\"\" className='cart-img'/> \r\n                  <div className=\"cart-details\">\r\n                  <p>{item.title}</p>\r\n                   <p>${item.price}.00 Ã— {cartCounter}=${item.price * cartCounter}</p>\r\n                  </div>\r\n                  <img src={deleteIcon} alt=\"\" onClick={() => setCartCounter((count) => count =0)}/>\r\n                  </div>\r\n                  <button className='action-button'>Checkout</button>\r\n\r\n                </div>)\r\n            }) : <p className='emptytext'> Cart is empty </p>\r\n        }\r\n        </div>\r\n               \r\n            </div>\r\n        </motion.div>\r\n            \r\n\r\n<motion.div \r\n\r\nvariants={animation} \r\ninitial={{y:\"-100vh\"}}\r\nanimate={mobileMenu ? \"opened\" : \"closed\" }\r\ntransition={{duration:0.7}} \r\n className=\"mobileMenuList\">\r\n<ul>\r\n        <li>Collections</li>\r\n        \r\n        <li>Men</li>\r\n        \r\n        <li>Women</li>\r\n        \r\n        <li>About</li>\r\n        \r\n        <li>Contact</li>\r\n        <p  onClick={() => setMobileMenu((state) => !state) }>Close</p>\r\n\r\n\r\n    </ul>\r\n\r\n\r\n    \r\n</motion.div>\r\n           \r\n           \r\n      \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","D:\\ecommerce\\src\\productPage.js",["41","42","43"],"import React, {useState} from 'react'\r\nimport  products  from './product'\r\nimport {  motion, AnimatePresence } from 'framer-motion'\r\n\r\nimport plusIcon from './images/icon-plus.svg'\r\nimport minusIcon from './images/icon-minus.svg'\r\nimport cartIcon from './images/icon-cart.svg'\r\nimport { useRef } from 'react'\r\nimport {useGlobalContext} from './context'\r\n\r\nfunction ProductPage() {\r\n\r\n    const [indexValue, setIndex] = useState(0);\r\n\r\n    const activeThumb = useRef([])\r\n    \r\n    const {counter, setCounter, cartCounter, setCartCounter, modalSlider, setModal} = useGlobalContext()\r\n\r\n\r\n\r\n    const handleChange = index =>{\r\n\r\n        setIndex(index)\r\n        \r\n\r\n        const thumbImages = activeThumb.current.children\r\n        console.log(thumbImages)\r\n        \r\n            for(var i= 0; i< thumbImages.length ; i++){\r\n                if(i === index){\r\n\r\n                    thumbImages[i].className = 'active-thumb'\r\n\r\n                }\r\n                else{\r\n                    thumbImages[i].className = ''\r\n\r\n                }\r\n            }\r\n        \r\n       \r\n        \r\n    }\r\n      \r\n\r\n\r\n    \r\n\r\n\r\n    \r\n  \r\n    return (\r\n        <div className=\"product-section\">\r\n            <motion.div className=\"image-wrapper\" initial={{opacity: 0} } transition={{delay: 2 }} animate={{opacity: 1.5}}>\r\n                <div className=\"main-image\">\r\n                {\r\n                    products.map((item) => {\r\n                        const {ImageSrc} = item\r\n                        return   <AnimatePresence><motion.img transition={{duration: 1}} initial={{scale: 0}}\r\n                        animate={{scale: 1}} src={ImageSrc[indexValue]} alt=\"\" onClick={() => setModal(true)} /></AnimatePresence>\r\n                    })\r\n                    \r\n                }\r\n\r\n\r\n                   \r\n\r\n                </div>\r\n                {\r\n                    products.map((item) => {\r\n                        return (\r\n                            <div className=\"thumbnail\" ref={activeThumb}  >\r\n                                {\r\n                                    item.ImageThumbSrc.map((img ,index) => {\r\n                                        return <img src={img} alt=\"\" onClick={() => handleChange(index)\r\n                                         } \r\n                                       />\r\n                                    })\r\n                                }\r\n                            </div>\r\n                    )\r\n                    })\r\n                }\r\n               \r\n                \r\n            </motion.div>\r\n            <motion.div className=\"details\" initial={{opacity: 0} } transition={{delay: 2 }} animate={{opacity: 1.5}}>\r\n                <h3 style={{color: \"hsl(26, 100%, 55%)\"}}> Sneaker Company</h3>\r\n                {products.map((item) =>{\r\n                    return(  <div className=\"sneaker-deatils\">\r\n                    <h1 style={{textTransform: \"capitalize\" , margin: \" 10px 0\" , fontSize:\"50px\" }}>{item.title}</h1>\r\n                    <p style={{ margin: \" 10px 0\" , color: \"hsl(219, 9%, 45%)\" }}>{item.desc}</p>\r\n                    <h3  style={{ margin: \" 10px 0\" }}>${item.Previous * 0.50}.00 <span  style={{ marginLeft: \"10px\" , color: \"hsl(26, 100%, 55%)\" , \r\n                    fontSize: \"14px\",background: \"hsl(25, 100%, 94%)\" }}>50%</span></h3>\r\n                    <del  style={{ margin: \" 10px 0\",  color: \"hsl(219, 9%, 45%)\" }}>${item.Previous}.00</del>\r\n                </div>)\r\n                      \r\n                    \r\n                })}\r\n\r\n                <div className=\"sneaker-count\">\r\n\r\n                   <div className=\"sneaker-selection\" >\r\n                   <img src={minusIcon} alt=\"-\" onClick={()=> setCounter((count)=> count > 0 ? count-1 : count)  }/> {counter}  <img src={plusIcon} alt=\"+\" \r\n                   onClick={()=> setCounter((count)=> count+1 )  }/> </div><button onClick={() => setCartCounter(counter)} className='action-button'> <svg width=\"16\" height=\"14\" viewBox=\"0 0 22 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20.925 3.641H3.863L3.61.816A.896.896 0 0 0 2.717 0H.897a.896.896 0 1 0 0 1.792h1l1.031 11.483c.073.828.52 1.726 1.291 2.336C2.83 17.385 4.099 20 6.359 20c1.875 0 3.197-1.87 2.554-3.642h4.905c-.642 1.77.677 3.642 2.555 3.642a2.72 2.72 0 0 0 2.717-2.717 2.72 2.72 0 0 0-2.717-2.717H6.365c-.681 0-1.274-.41-1.53-1.009l14.321-.842a.896.896 0 0 0 .817-.677l1.821-7.283a.897.897 0 0 0-.87-1.114ZM6.358 18.208a.926.926 0 0 1 0-1.85.926.926 0 0 1 0 1.85Zm10.015 0a.926.926 0 0 1 0-1.85.926.926 0 0 1 0 1.85Zm2.021-7.243-13.8.81-.57-6.341h15.753l-1.383 5.53Z\" fill=\"#fff\" fill-rule=\"nonzero\"/></svg>  Add to cart</button>\r\n\r\n                </div>\r\n\r\n            </motion.div>\r\n            <motion.div className=\"justforAnimation\" initial={{y: 0  }} animate={{y: '-500vw' }} transition={{duration: 1}}>\r\n\r\n            </motion.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductPage\r\n","D:\\ecommerce\\src\\product.js",[],"D:\\ecommerce\\src\\context.js",[],"D:\\ecommerce\\src\\Modal.js",["44","45","46"],"import { ListItem } from '@material-ui/core'\r\nimport React, {useState} from 'react'\r\nimport products from './product'\r\nimport {  motion, AnimatePresence } from 'framer-motion'\r\n\r\nimport nextIcon from './images/icon-next.svg'\r\nimport prevIcon from './images/icon-previous.svg'\r\nimport closeIcon from './images/icon-close.svg'\r\nimport {useGlobalContext} from './context'\r\n\r\nfunction Modal() {\r\n    const [modalCount, setModalCount] = useState(0)\r\n    const {modalSlider, setModal} = useGlobalContext()\r\n    return (\r\n        <div>\r\n        \r\n            {\r\n                products.map((item) => {\r\n                    return (\r\n                        <div className={`${modalSlider ? 'modalWrapperShow' : 'modalWrapperHidden'}`}\r\n                        >\r\n                            \r\n                            <div className='moda-image-wrapper'>\r\n                                <div className=\"prevBtn\">\r\n                                <svg width=\"12\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11 1 3 9l8 8\" stroke=\"hsl(26, 100%, 55%)\" stroke-width=\"3\" fill=\"none\" fill-rule=\"evenodd\"\r\n                                 onClick={() => setModalCount((count) => count > 0 ? count- 1 : count =3 )}\r\n                                /></svg>\r\n                                </div>\r\n                                \r\n                            \r\n                                <img src={closeIcon}  alt=\"close\" className='closeBtn' onClick={() => setModal(false)}/>\r\n                                <AnimatePresence>\r\n                              { modalSlider && ( \r\n                              <motion.img transition={{duration: 1}} initial={{scale: 0}}\r\n                        animate={{scale: 1}}\r\n                          src={item.ImageSrc[modalCount]} alt=\"\"  className='modal-image'/>)}</AnimatePresence> \r\n                          <div className=\"nextBtn\">\r\n                          <svg width=\"13\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m3 1 9 8-8 8\" stroke=\"hsl(26, 100%, 55%)\" stroke-width=\"3\" fill=\"none\" fill-rule=\"evenodd\" className='nextBtn' onClick={() => setModalCount((count) => count < 3 ? count+ 1 : count = 0)}/></svg>\r\n                              </div> \r\n                         \r\n                           \r\n                            </div>\r\n                           \r\n                           \r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":37,"column":9,"nodeType":"53","messageId":"54","endLine":37,"endColumn":32},{"ruleId":"55","severity":1,"message":"56","line":7,"column":8,"nodeType":"57","messageId":"58","endLine":7,"endColumn":16},{"ruleId":"55","severity":1,"message":"59","line":17,"column":33,"nodeType":"57","messageId":"58","endLine":17,"endColumn":44},{"ruleId":"55","severity":1,"message":"60","line":17,"column":62,"nodeType":"57","messageId":"58","endLine":17,"endColumn":73},{"ruleId":"55","severity":1,"message":"61","line":1,"column":10,"nodeType":"57","messageId":"58","endLine":1,"endColumn":18},{"ruleId":"55","severity":1,"message":"62","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":16},{"ruleId":"55","severity":1,"message":"63","line":7,"column":8,"nodeType":"57","messageId":"58","endLine":7,"endColumn":16},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'cartIcon' is defined but never used.","Identifier","unusedVar","'cartCounter' is assigned a value but never used.","'modalSlider' is assigned a value but never used.","'ListItem' is defined but never used.","'nextIcon' is defined but never used.","'prevIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]